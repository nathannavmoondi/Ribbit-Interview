<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="React tests" tests="0" failures="0" errors="1" time="5.094">
  <testsuite name="src\pages\airport_dashboard\__tests__\AirportEditing.test.tsx" errors="1" failures="0" skipped="0" timestamp="1970-01-01T00:00:00" time="0" tests="0">
    <testcase classname="Test suite failed to run" name="src\pages\airport_dashboard\__tests__\AirportEditing.test.tsx" time="0" file="src\pages\airport_dashboard\__tests__\AirportEditing.test.tsx">
      <error>  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default &quot;node_modules&quot; folder is ignored by transformers.

    Here&apos;s what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your &quot;node_modules&quot; files transformed, you can specify a custom &quot;transformIgnorePatterns&quot; in your config.
     • If you need a custom transformation, specify a &quot;transform&quot; option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the &quot;moduleNameMapper&quot; config option.

    You&apos;ll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: C:\Projects\Interview Tests\Ribbit\src\pages\airport_dashboard\__tests__\AirportEditing.test.tsx: Missing semicolon. (20:79)

      18 |
      19 |     // Now there should be an input with value
    &gt; 20 |     const input = screen.getByDisplayValue(&apos;Los Angeles International Airport&apos;) as HTMLInputElement;
         |                                                                                ^
      21 |     fireEvent.change(input, { target: { value: &apos;LA Intl Edited&apos; } });
      22 |
      23 |     // Blur to commit

      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)
      at JSXParserMixin.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)
      at JSXParserMixin.raise [as semicolon] (node_modules/@babel/parser/src/parser/util.ts:149:10)
      at JSXParserMixin.semicolon [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1247:10)
      at JSXParserMixin.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)
      at JSXParserMixin.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at JSXParserMixin.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)
      at JSXParserMixin.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)
      at JSXParserMixin.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at JSXParserMixin.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)
      at JSXParserMixin.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)
      at JSXParserMixin.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)
      at JSXParserMixin.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)
      at JSXParserMixin.parseParenAndDistinguishExpression (node_modules/@babel/parser/src/parser/expression.ts:1162:21)
      at JSXParserMixin.parseExprAtom (node_modules/@babel/parser/src/plugins/jsx/index.ts:583:22)
      at JSXParserMixin.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)
      at JSXParserMixin.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at JSXParserMixin.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at JSXParserMixin.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at JSXParserMixin.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at JSXParserMixin.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at JSXParserMixin.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)
      at JSXParserMixin.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)
      at JSXParserMixin.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)
      at JSXParserMixin.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)
      at JSXParserMixin.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)
      at JSXParserMixin.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)
      at JSXParserMixin.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)
      at JSXParserMixin.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)
      at JSXParserMixin.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)
      at JSXParserMixin.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)
      at JSXParserMixin.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at JSXParserMixin.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at JSXParserMixin.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at JSXParserMixin.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at JSXParserMixin.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at JSXParserMixin.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at JSXParserMixin.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)
      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)
      at JSXParserMixin.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)
      at JSXParserMixin.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)
      at JSXParserMixin.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)
      at JSXParserMixin.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at JSXParserMixin.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)
      at JSXParserMixin.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)
      at JSXParserMixin.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at JSXParserMixin.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)
      at JSXParserMixin.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)
      at JSXParserMixin.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)
      at JSXParserMixin.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)
      at JSXParserMixin.parseParenAndDistinguishExpression (node_modules/@babel/parser/src/parser/expression.ts:1162:21)
      at JSXParserMixin.parseExprAtom (node_modules/@babel/parser/src/plugins/jsx/index.ts:583:22)
      at JSXParserMixin.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)
      at JSXParserMixin.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at JSXParserMixin.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at JSXParserMixin.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at JSXParserMixin.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at JSXParserMixin.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at JSXParserMixin.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)
      at JSXParserMixin.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)
      at JSXParserMixin.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)
      at JSXParserMixin.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)
      at JSXParserMixin.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)
      at JSXParserMixin.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)
      at JSXParserMixin.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)
      at JSXParserMixin.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)
      at JSXParserMixin.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)
      at JSXParserMixin.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)
      at JSXParserMixin.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at JSXParserMixin.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at JSXParserMixin.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at JSXParserMixin.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at JSXParserMixin.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at JSXParserMixin.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at JSXParserMixin.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)
      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)
      at JSXParserMixin.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)
      at JSXParserMixin.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)
      at JSXParserMixin.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)
      at JSXParserMixin.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at JSXParserMixin.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)
      at JSXParserMixin.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)
      at JSXParserMixin.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at JSXParserMixin.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)
      at JSXParserMixin.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)
      at JSXParserMixin.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)
      at parse (node_modules/@babel/parser/src/index.ts:92:38)
      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)
          at parser.next (&lt;anonymous&gt;)
      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)
          at normalizeFile.next (&lt;anonymous&gt;)
      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)
          at run.next (&lt;anonymous&gt;)
      at transform (node_modules/@babel/core/src/transform.ts:29:20)
          at transform.next (&lt;anonymous&gt;)
      at evaluateSync (node_modules/gensync/index.js:251:28)
      at sync (node_modules/gensync/index.js:89:14)
      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)
</error>
    </testcase>
    <testcase classname="Test suite failed to run" name="src\pages\airport_dashboard\__tests__\AirportEditing.test.tsx" time="0" file="src\pages\airport_dashboard\__tests__\AirportEditing.test.tsx">
      <failure>{&quot;code&quot;:&quot;BABEL_PARSE_ERROR&quot;,&quot;reasonCode&quot;:&quot;MissingSemicolon&quot;,&quot;loc&quot;:{&quot;line&quot;:20,&quot;column&quot;:79,&quot;index&quot;:888},&quot;pos&quot;:888}</failure>
    </testcase>
  </testsuite>
</testsuites>